library(scaffold)
library(cluster)
options(stringsAsFactors = F)
> rm(list = ls())
> working.dir <- "/scratch/scratch/regmond/cytof/scaffold_maps/scaffold_original_data_C57BL6/downsampled"
> ref.file <- "BoneMarrow_C57BL6.fcs.clustered.txt"
> outputdir <-"/scratch/scratch/regmond/cytof/scaffold_maps/scaffold_original_data_C57BL6/test"
> markersFile <- "/scratch/scratch/regmond/cytof/scaffold_maps/scaffold_original_data_C57BL6/parameters.txt"
> asinh_cofactor <- "5"
> library(scaffold)
 rm(list = ls())
working.dir <- "/scratch/scratch/regmond/cytof/scaffold_maps/scaffold_original_data_C57BL6/downsampled"
ref.file <- "BoneMarrow_C57BL6.fcs.clustered.txt"
outputdir <-"/scratch/scratch/regmond/cytof/scaffold_maps/scaffold_original_data_C57BL6/test"
markersFile <- "/scratch/scratch/regmond/cytof/scaffold_maps/scaffold_original_data_C57BL6/parameters.txt"
asinh_cofactor <- "5"
 library(scaffold)
library(scaffold)
library(flowCore)
library(tools)
library(igraph)
library(reshape)
library(ggrepel)
#————————————
#- CLUSTERING
#————————————
col.names <- as.character(read.table(markersFile, header = FALSE)[,1])
num.cores <- as.numeric(2)
num_clusters <- as.numeric(200)
num_samples <- as.numeric(50)
asinh.cofactor <- as.numeric(asinh_cofactor) 
working.dir
fcs.file <- read.FCS("/scratch/scratch/regmond/cytof/scaffold_maps/scaffold_original_data_C57BL6/downsampled/BoneMarrow_C57BL6.fcs")
orig.data <- exprs(fcs.file)
    tab <- convert_fcs(fcs.file, asinh.cofactor)
    colnames(tab) <- pData(parameters(fcs.file))$desc
    if(any(is.na(colnames(tab))))
    {
        w <- is.na(colnames(tab))
        colnames(tab)[w] <- pData(parameters(fcs.file))$name[w]
    }
    tab <- scaffold:::convert_fcs(fcs.file, asinh.cofactor)
colnames(tab) <- pData(parameters(fcs.file))$desc
    if(any(is.na(colnames(tab))))
    {
        w <- is.na(colnames(tab))
        colnames(tab)[w] <- pData(parameters(fcs.file))$name[w]
    }
    
    
    
    tab <- as.matrix(tab)
    tab[tab < 0] <- 0
    tab <- as.data.frame(tab)
    
    
m <- as.matrix(tab[, col.names])
m
clara(m, k, ...)
clara(m, 2, ...)
cluster_data(tab, col.names, k = num_clusters, algorithm = "clara", sampsize = min(nrow(tab), 1000), samples = num_samples)
 cluster_data <- function(tab, col.names, k, algorithm = "", ...)
    {
        m <- as.matrix(tab[, col.names])
        
        if(algorithm == "clara")
        {
            print("Performing clara clustering")
            groups <- clara(m, k, ...)$clustering
        }
        
        else if(algorithm == "hierarchical")
        {
            print("Performing hierarchical clustering")
            dend <- hclust(dist(m), ...)
            groups <- cutree(dend, k)
        }
        
        print("Clustering done")
        tab <- cbind(tab, groups)
        return(tab)
    }
cluster_data(tab, col.names, k = num_clusters, algorithm = "clara", sampsize = min(nrow(tab), 1000), samples = num_samples)
q()
